<<<<<<< HEAD
plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {

    defaultConfig {
        applicationId 'com.seafile.seadroid2'
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        compileSdk rootProject.ext.compileSdkVersion

        versionCode 150
        versionName "3.0.0-beta"
        multiDexEnabled true

        resValue "string", "authorities", defaultConfig.applicationId + '.debug.cameraupload.provider'
        resValue "string", "account_type", defaultConfig.applicationId + ".debug.account.api2"

        buildConfigField "String", "ACCOUNT_TYPE", '"' + defaultConfig.applicationId + '.debug.account.api2"'
        buildConfigField "String", "FILE_PROVIDER_AUTHORITIES", '"' + defaultConfig.applicationId + '.debug.fileprovider"'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments["room.incremental"] = "true"
                arguments["workmanager.inline"] = "false" // 禁用 WorkManager 的自动初始化
            }
        }
=======
apply plugin: 'com.android.application'

android {
    namespace 'com.ateneacloud.drive'
    compileSdkVersion rootProject.ext.compileSdkVersion


    defaultConfig {
        applicationId 'com.ateneacloud.drive'
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 138
        versionName "2.3.5"
        multiDexEnabled true
        resValue "string", "authorities", applicationId + '.cameraupload.provider'
        resValue "string", "account_type", "com.seafile.seadroid2.account.api2"
        buildConfigField "String", "ACCOUNT_TYPE", '"com.seafile.seadroid2.account.api2"'
        
>>>>>>> huawei-android-mod-private/feature/ATENEA-CLOUD
    }

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    signingConfigs {
        debug {
//            def props = new Properties()
//            props.load(new FileInputStream(project.file("debugkey.properties")))
//            storeFile project.file(props.keyStore)
//            storePassword props.keyStorePassword
//            keyAlias props.keyAlias
//            keyPassword props.keyAliasPassword
        }
        release {
//            Signing code for manual signing
//            storeFile file(System.console().readLine("\n\$ Enter keystore path: "))
//            storePassword System.console().readPassword("\n\$ Enter keystore password: ").toString()
//            keyAlias System.console().readLine("\n\$ Enter key alias: ")
//            keyPassword System.console().readPassword("\n\$ Enter key password: ").toString()

            def props = new Properties()
            props.load(new FileInputStream(project.file("key.properties")))
            storeFile project.file(props.keyStore)
            storePassword props.keyStorePassword
            keyAlias props.keyAlias
            keyPassword props.keyAliasPassword
        }
    }

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix ".debug"
<<<<<<< HEAD
            signingConfig signingConfigs.debug
            minifyEnabled false

            resValue "string", "authorities", defaultConfig.applicationId + '.debug.cameraupload.provider'
            resValue "string", "account_type", defaultConfig.applicationId + ".debug.account.api2"

            buildConfigField "String", "ACCOUNT_TYPE", '"' + defaultConfig.applicationId + '.debug.account.api2"'
            buildConfigField "String", "FILE_PROVIDER_AUTHORITIES", '"' + defaultConfig.applicationId + '.debug.fileprovider"'

=======
            resValue "string", "authorities", defaultConfig.applicationId + '.debug.cameraupload.provider'
            resValue "string", "account_type", "com.seafile.seadroid2.debug.account.api2"
            buildConfigField "String", "ACCOUNT_TYPE", '"com.seafile.seadroid2.debug.account.api2"'
            signingConfig signingConfigs.debug
            minifyEnabled false
>>>>>>> huawei-android-mod-private/feature/ATENEA-CLOUD
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
                        if (variant.name == "debug")
                            outputFileName = "seafile-debug-" + defaultConfig.versionName + ".apk"
                    }
                }
            }
        }

        release {
<<<<<<< HEAD
            signingConfig signingConfigs.release
            minifyEnabled true

            resValue "string", "authorities", defaultConfig.applicationId + '.cameraupload.provider'
            resValue "string", "account_type", defaultConfig.applicationId + ".account.api2"

            buildConfigField "String", "ACCOUNT_TYPE", '"' + defaultConfig.applicationId + '.account.api2"'
            buildConfigField "String", "FILE_PROVIDER_AUTHORITIES", '"' + defaultConfig.applicationId + '.fileprovider"'


            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
=======
           // signingConfig signingConfigs.release
            debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            signingConfig signingConfigs.debug
>>>>>>> huawei-android-mod-private/feature/ATENEA-CLOUD
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
                        if (variant.name == "release") {
                            outputFileName = "seafile-" + defaultConfig.versionName + ".apk"
                        }
                    }
                }
            }
        }
    }
    bundle {
        density {
            enableSplit true
        }
        abi {
            enableSplit true
        }
        language {
            enableSplit true
        }
    }

<<<<<<< HEAD
    buildFeatures {
        viewBinding true
    }

=======
    configurations.all {
        resolutionStrategy {
            force 'org.xerial:sqlite-jdbc:3.34.0'
        }
    }


>>>>>>> huawei-android-mod-private/feature/ATENEA-CLOUD
    allprojects {
        repositories {
            maven { url 'https://jitpack.io' }
        }
    }
<<<<<<< HEAD

//    configurations {
//        implementation.exclude group: 'org.jetbrains' , module:'annotations'
//    }

=======
>>>>>>> huawei-android-mod-private/feature/ATENEA-CLOUD
    dependencies {
        implementation fileTree(include: ['*.jar'], dir: 'libs')

        implementation 'com.blankj:utilcode:1.30.7'
<<<<<<< HEAD
        //https://github.com/CymChad/BaseRecyclerViewAdapterHelper
        implementation "io.github.cymchad:BaseRecyclerViewAdapterHelper4:4.1.2"

        // Firebase
        implementation platform('com.google.firebase:firebase-bom:32.8.1')
        implementation 'com.google.firebase:firebase-crashlytics'
        implementation 'com.google.firebase:firebase-analytics'

        //media3
        final def media3_version = '1.2.1'
        implementation "androidx.media3:media3-exoplayer:$media3_version"
        implementation "androidx.media3:media3-ui:$media3_version"

        implementation 'androidx.core:core-splashscreen:1.0.1'
        implementation "androidx.appcompat:appcompat:1.6.1"
        implementation "androidx.activity:activity:1.8.2"
        implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
        implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
        implementation "androidx.preference:preference:1.2.1"
//        implementation "androidx.datastore:datastore-preferences:1.0.0"
//        implementation "androidx.datastore:datastore-preferences-rxjava2:1.0.0"
        implementation "androidx.core:core-splashscreen:1.0.1"

        implementation "com.google.android.material:material:1.11.0"

        def lifecycle_version = "2.7.0"
        implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
        implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
        //ProcessLifecycleOwner provides a lifecycle for the whole application process
        implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
        //helpers for implementing LifecycleOwner in a Service
        //implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
        // optional - ReactiveStreams support for LiveData
        //implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"

        def work_version = "2.9.0"
        implementation "androidx.work:work-runtime:$work_version"
        implementation "androidx.work:work-rxjava2:$work_version"

        //squareup
        def retrofit_version = "2.9.0"
        implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
        implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
        implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
        implementation 'com.squareup.okhttp3:okhttp:3.9.1'
        implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'

        //room
        def room_version = "2.6.1"
        implementation "androidx.room:room-runtime:$room_version"
        implementation "androidx.room:room-rxjava2:$room_version"
        annotationProcessor "androidx.room:room-compiler:$room_version"

        //https://github.com/google/guava
        implementation "com.google.guava:guava:32.1.2-android"
        //gson
        implementation 'com.google.code.gson:gson:2.10.1'
        //https://github.com/apache/commons-io
        implementation 'commons-io:commons-io:2.13.0'
        //https://github.com/apache/commons-lang
        implementation 'com.github.apache:commons-lang:rel~commons-lang-3.12.0'

        //Rxjava
        implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
        implementation 'io.reactivex.rxjava2:rxjava:2.2.10'

        //https://github.com/elvishew/xLog
        implementation 'com.elvishew:xlog:1.10.1'

//        //https://github.com/wasabeef/recyclerview-animators
//        implementation 'jp.wasabeef:recyclerview-animators:4.0.2'

        //live event bus
//        implementation 'io.github.jeremyliao:live-event-bus-x:1.8.0'

        implementation 'com.github.kevinsawicki:http-request:6.0'
//        implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'

=======
        implementation "io.github.cymchad:BaseRecyclerViewAdapterHelper:4.0.0-beta14"

        //media3
        final def media3_version = '1.1.0'
        implementation "androidx.media3:media3-exoplayer:$media3_version"
        implementation "androidx.media3:media3-ui:$media3_version"

        final def x_version = '1.5.0'
        implementation "androidx.appcompat:appcompat:$x_version"
        implementation "androidx.activity:activity:$x_version"
        implementation "com.google.android.material:material:$x_version"
        implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
        implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

        //https://github.com/ongakuer/CircleIndicator
        implementation 'me.relex:circleindicator:2.1.6'

        implementation 'com.github.kevinsawicki:http-request:6.0'
        implementation 'commons-io:commons-io:2.13.0'
        implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'

        //https://github.com/google/guava
        implementation "com.google.guava:guava:32.1.2-android"
>>>>>>> huawei-android-mod-private/feature/ATENEA-CLOUD

        //https://github.com/Baseflow/PhotoView
        implementation 'com.github.Chrisbanes:PhotoView:2.3.0'

        //https://jitpack.io
<<<<<<< HEAD
//        implementation 'com.github.zhwanng:XXPermissions:1.0.2'
        implementation 'com.github.haiwen:MarkdownView:v0.19.4'
        implementation 'com.github.yydcdut.RxMarkdown:markdown-processor:v0.1.3'


//        //markdown
//        final def markwon_version = '4.6.2'
//        implementation "io.noties.markwon:core:$markwon_version"
//        implementation "io.noties.markwon:editor:$markwon_version"
//        implementation "io.noties.markwon:ext-latex:$markwon_version"
//        implementation "io.noties.markwon:ext-strikethrough:$markwon_version"
//        implementation "io.noties.markwon:ext-tables:$markwon_version"
//        implementation "io.noties.markwon:ext-tasklist:$markwon_version"
//        implementation "io.noties.markwon:html:$markwon_version"
//        implementation "io.noties.markwon:image:$markwon_version"
//        implementation "io.noties.markwon:image-glide:$markwon_version"
//        implementation "io.noties.markwon:inline-parser:$markwon_version"
//        implementation "io.noties.markwon:linkify:$markwon_version"
//        implementation "io.noties.markwon:syntax-highlight:$markwon_version"



        implementation 'com.madgag.spongycastle:core:1.54.0.0'
        implementation 'com.madgag.spongycastle:prov:1.54.0.0'

        implementation 'org.greenrobot:eventbus:3.3.1'

        def glide_version = "4.16.0"
=======
        implementation 'com.github.zhwanng:XXPermissions:1.0.2'
        implementation 'com.github.zhwanng.android-iconify:android-iconify:3.0.1'
        implementation 'com.github.zhwanng.android-iconify:android-iconify-material-community:3.0.1'
        implementation 'com.github.zhwanng:BottomSheet:v1.5.2'
        implementation 'com.github.haiwen:MarkdownView:v0.19.4'
        implementation 'com.github.yydcdut.RxMarkdown:markdown-processor:v0.1.3'

        testImplementation 'junit:junit:4.12'
        testImplementation 'org.robolectric:robolectric:3.0'

        implementation 'com.madgag.spongycastle:core:1.54.0.0'
        implementation 'com.madgag.spongycastle:prov:1.54.0.0'
        implementation 'com.squareup.okhttp3:okhttp:3.9.1'
        implementation 'io.reactivex.rxjava3:rxjava:3.1.5'
        implementation 'io.reactivex.rxjava3:rxandroid:3.0.2'
        implementation 'com.google.code.gson:gson:2.10'

        implementation 'org.greenrobot:eventbus:3.3.1'

        def glide_version = "4.14.2"
>>>>>>> huawei-android-mod-private/feature/ATENEA-CLOUD
        implementation "com.github.bumptech.glide:glide:$glide_version"
        implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"
        annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

<<<<<<< HEAD

        testImplementation 'junit:junit:4.13.2'
        androidTestImplementation 'androidx.test.ext:junit:1.1.5'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
        testImplementation 'org.robolectric:robolectric:4.9'


    }
}
=======
        //RoomDatabase
        implementation "androidx.room:room-runtime:2.3.0"
        annotationProcessor "androidx.room:room-compiler:2.3.0"

        //Execute service foreground android =>12
        implementation 'androidx.work:work-runtime:2.7.1'
        implementation 'com.google.guava:guava:27.0.1-android'

        implementation "com.google.android.material:material:1.9.0"

    }
}

>>>>>>> huawei-android-mod-private/feature/ATENEA-CLOUD
